<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.joeun.mapper.ProductMapper">

	<insert id="addProduct" parameterType="com.joeun.dto.ProductDto">
		insert into product
		(product_id, product_name, product_condition,
		product_price,
		product_description, img1,
		img2, img3, img4, product_category_id)
		values (#{productId},
		#{productName},
		#{productCondition},
		#{productPrice},
		#{productDescription},
		#{img1},
		#{img2},
		#{img3},
		#{img4},
		#{productCategoryId})
	</insert>

	<insert id="addCategory"
		parameterType="com.joeun.dto.ProductCategoryDto">
		insert into product_category(product_category_name)
		value (
		#{productCategoryName}
		)
	</insert>

	<select id="findAllProduct"
		resultType="com.joeun.dto.ProductDto">
		SELECT *
		FROM product
	</select>


	<select id="findAllCategory"
		resultType="com.joeun.dto.ProductCategoryDto">
		select *
		from product_category
	</select>

	<select id="findCategoryName"
		resultType="com.joeun.dto.ProductCategoryDto">
		select product_category_name
		from product_category
		WHERE
		product_category_id = #{category}
	</select>

	<!-- 상품 전체 조회 -->
	<select id="findAllProductsPaging">
		SELECT *
		FROM
		product
		WHERE product_id NOT IN (
		SELECT
		product_id
		FROM orders
		WHERE orders_status IS NULL
		)
		LIMIT #{param2}
		OFFSET #{param1}
	</select>
	<!-- 상품 높은순 전체 조회 -->
	<select id="findAllProductshighPaging">
		SELECT *
		FROM
		product
		WHERE product_id NOT IN (
		SELECT
		product_id
		FROM orders
		WHERE orders_status IS NULL
		)
		order by product_id
		DESC
		LIMIT
		#{param2} OFFSET #{param1}
	</select>

	<!-- 상품 전체 가격순 조회 -->
	<select id="findAllProductsPrice">
		SELECT *
		FROM
		product
		WHERE product_id NOT IN (
		SELECT
		product_id
		FROM orders
		WHERE orders_status IS NULL
		)
		order by
		product_price
		LIMIT
		#{param2} OFFSET #{param1}
	</select>

	<!-- 상품 전체 높은 가격순 조회 -->
	<select id="findAllProductshighPrice">
		SELECT *
		FROM
		product
		WHERE product_id NOT IN (
		SELECT
		product_id
		FROM orders
		WHERE orders_status IS NULL
		)
		order by
		product_price DESC
		LIMIT
		#{param2} OFFSET #{param1}
	</select>

	<!-- 상품 검색 조회 -->
	<select id="findProductsByKeywordPaging">
		SELECT *
		FROM
		product
		WHERE
		product_name LIKE CONCAT('%',
		#{keyword}, '%')
		AND NOT EXISTS (
		SELECT 1
		FROM orders
		WHERE
		orders.product_id = product.product_id
		AND orders.orders_status IS NULL
		)
		order by product_id
		LIMIT #{offset}, #{size}
	</select>

	<!-- 상품 높은순 검색 조회 -->
	<select id="findProductsByKeywordhighPaging">
		SELECT *
		FROM
		product
		WHERE
		product_name LIKE CONCAT('%',
		#{keyword}, '%')
		AND NOT EXISTS (
		SELECT 1
		FROM orders
		WHERE
		orders.product_id = product.product_id
		AND orders.orders_status IS NULL
		)
		order by product_id DESC
		LIMIT #{offset}, #{size}
	</select>

	<!-- 상품 상세 조회 -->
	<select id="orderproduct">
		SELECT *
		FROM product
		WHERE product_id = #{order}
	</select>

	<!-- 상품 검색 가격순 조회 -->
	<select id="findProductsByKeywordPrice">
		SELECT *
		FROM
		product
		WHERE
		product_name LIKE CONCAT('%',
		#{keyword}, '%')
		AND NOT EXISTS (
		SELECT 1
		FROM orders
		WHERE
		orders.product_id = product.product_id
		AND orders.orders_status IS NULL
		)
		order by product_price
		LIMIT #{offset}, #{size}
	</select>

	<!-- 상품 검색 높은 가격순 조회 -->
	<select id="findProductsByKeywordhighPrice">
		SELECT *
		FROM product
		WHERE product_name LIKE
		CONCAT('%', #{keyword}, '%')
		AND NOT EXISTS (
		SELECT 1
		FROM orders
		WHERE
		orders.product_id = product.product_id
		AND orders.orders_status IS NULL
		)
		ORDER BY product_price DESC
		LIMIT #{offset}, #{size}
	</select>

	<!-- 검색된 상품 수 조회 -->
	<select id="countProductsByKeyword" resultType="int">
		SELECT COUNT(*)
		FROM product
		WHERE product_name LIKE CONCAT('%', #{keyword}, '%')

	</select>

	<select id="findAllProductId" resultType="int">
		select product_id
		from
		product
	</select>

	<select id="findProductById"
		resultType="com.joeun.dto.ProductDto">
		select *
		from product
		where product_id = #{productId}
	</select>

	<select id="findProductByCategory"
		resultType="com.joeun.dto.ProductDto">
		select *
		from product
		where product_category_id = #{category}
		AND NOT EXISTS (
		SELECT 1
		FROM orders
		WHERE orders.product_id =
		product.product_id
		AND orders.orders_status IS NULL
		)
		LIMIT #{offset},
		#{size}
	</select>

	<update id="updateProduct"
		parameterType="com.joeun.dto.ProductDto">
		UPDATE product
		SET
		product_name = #{productName},
		product_condition = #{productCondition},
		product_price = #{productPrice},
		product_description = #{productDescription},
		Img1 = CASE WHEN #{img1} = 'null' THEN Img1 ELSE #{img1} END,
		Img2 = CASE WHEN #{img2} = 'null' THEN Img2 ELSE #{img2} END,
		Img3 = CASE WHEN #{img3} = 'null' THEN Img3 ELSE #{img3} END,
		Img4 = CASE WHEN #{img4} = 'null' THEN Img4 ELSE #{img4} END,
		product_category_id = #{productCategoryId}
		WHERE product_id = #{productId}
	</update>

	<select id="getProductInfo"
		resultType="com.joeun.dto.ProductDto">
		SELECT * FROM product WHERE product_id = #{productId}
	</select>

	<select id="getPriceById" resultType="int">
		select product_price from
		product where product_id = #{id}
	</select>
</mapper>